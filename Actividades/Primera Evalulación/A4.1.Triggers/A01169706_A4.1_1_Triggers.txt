"Crea los 3 triggers vistos en clase
1. Trigger para el salario mayor al 30%

CREATE TRIGGER UPDATE_SALARIO NO CASCADE
BEFORE UPDATE
ON EMPLOYEE
REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES
FOR EACH ROW
WHEN (OLD_VALUES.SALARY * 1.30 < NEW_VALUES.SALARY)
SIGNAL SQLSTATE '56001' SET MESSAGE_TEXT='MENSAJE_DE_ERROR'

2. Trigger para colocar órdenes de compra cuando sí hay suficientes productos

CREATE TRIGGER INSERT_COMPRA NO CASCADE
BEFORE INSERT
ON COMPRAS
REFERENCING NEW AS NEW_VALUES FOR EACH ROW
WHEN ( 0 >= (( SELECT QUANTITY FROM INVENTORY WHERE PID = NEW_VALUES.PRODUCTO_ID)-NEW_VALUES.CANTIDAD_PRODUCTOS) )
BEGIN ATOMIC
SIGNAL SQLSTATE '56001' SET MESSAGE_TEXT='MENSAJE_DE_ERROR';
END

3. Trigger que reduce la cantidad de productos del inventario cuando la orden de compra cambia a delivered"

CREATE TRIGGER SEND_COMPRA
AFTER UPDATE
ON COMPRAS
REFERENCING NEW AS NEW_VALUES OLD AS OLD_VALUES FOR EACH ROW
WHEN (NEW_VALUES.ESTADO != OLD_VALUES.ESTADO AND NEW_VALUES.ESTADO = '1')
BEGIN ATOMIC
UPDATE INVENTORY SET QUANTITY = QUANTITY-1 WHERE PID LIKE NEW_VALUES.PRODUCTO_ID;
END